.\tests\ours\semantical_tests\small\fun_calls.drac
# <program>
## <def-list>
### <def-list>
#### <def-list>
##### <def-list>
###### <def-list>
###### <def>
####### <fun-def>
######## <id> -> table index: 11
######## (
######## <param-list>
######### <id-list>
########## <id> -> table index: 19
########## <id-list-cont>
########### ,
########### <id> -> table index: 20
########### <id-list-cont>
############ ,
############ <id> -> table index: 21
############ <id-list-cont>
######## )
######## {
######## <var-def-list>
######## <stmt-list>
######### <stmt-list>
########## <stmt-list>
########### <stmt-list>
############ <stmt-list>
############ <stmt>
############# <stmt-return>
############## return
############## <expr>
############### <expr-or>
################ <expr-and>
################# <expr-comp>
################## <expr-rel>
################### <expr-add>
#################### <expr-mul>
##################### <expr-unary>
###################### <expr-primary>
####################### <fun-call>
######################## <id> -> table index: 11
######################## (
######################## <expr-list>
######################### <expr>
########################## <expr-or>
########################### <expr-and>
############################ <expr-comp>
############################# <expr-rel>
############################## <expr-add>
############################### <expr-add>
################################ <expr-add>
################################# <expr-add>
################################## <expr-mul>
################################### <expr-unary>
#################################### <expr-primary>
##################################### <id> -> table index: 19
################################# <op-add>
################################## +
################################# <expr-mul>
################################## <expr-unary>
################################### <expr-primary>
#################################### <id> -> table index: 20
################################ <op-add>
################################# +
################################ <expr-mul>
################################# <expr-unary>
################################## <expr-primary>
################################### <id> -> table index: 21
############################### <op-add>
################################ +
############################### <expr-mul>
################################ <expr-unary>
################################# <expr-primary>
################################## <id> -> table index: 17
######################### <expr-list-cont>
########################## ,
########################## <expr>
########################### <expr-or>
############################ <expr-and>
############################# <expr-comp>
############################## <expr-rel>
############################### <expr-add>
################################ <expr-mul>
################################# <expr-unary>
################################## <expr-primary>
################################### <id> -> table index: 20
########################## <expr-list-cont>
########################### ,
########################### <expr>
############################ <expr-or>
############################# <expr-and>
############################## <expr-comp>
############################### <expr-rel>
################################ <expr-add>
################################# <expr-mul>
################################## <expr-unary>
################################### <expr-primary>
#################################### <id> -> table index: 21
########################### <expr-list-cont>
######################## )
############## ;
########### <stmt>
############ <stmt-while>
############# while
############# (
############# <expr>
############## <expr-or>
############### <expr-and>
################ <expr-comp>
################# <expr-rel>
################## <expr-rel>
################### <expr-add>
#################### <expr-mul>
##################### <expr-unary>
###################### <expr-primary>
####################### <id> -> table index: 19
################## <op-rel>
################### <
################## <expr-add>
################### <expr-mul>
#################### <expr-unary>
##################### <expr-primary>
###################### <id> -> table index: 20
############# )
############# {
############# <stmt-list>
############## <stmt-list>
############## <stmt>
############### <stmt-if>
################ if
################ (
################ <expr>
################# <expr-or>
################## <expr-and>
################### <expr-comp>
#################### <expr-rel>
##################### <expr-rel>
###################### <expr-add>
####################### <expr-mul>
######################## <expr-unary>
######################### <expr-primary>
########################## <id> -> table index: 21
##################### <op-rel>
###################### <
##################### <expr-add>
###################### <expr-mul>
####################### <expr-unary>
######################## <expr-primary>
######################### <id> -> table index: 20
################ )
################ {
################ <stmt-list>
################# <stmt-list>
################# <stmt>
################## <stmt-break>
################### break
################### ;
################ }
################ <else-if-list>
################ <else>
############# }
########## <stmt>
########### <stmt-do-while>
############ do
############ {
############ <stmt-list>
############# <stmt-list>
############# <stmt>
############## <stmt-break>
############### break
############### ;
############ }
############ while
############ (
############ <expr>
############# <expr-or>
############## <expr-and>
############### <expr-comp>
################ <expr-rel>
################# <expr-rel>
################## <expr-add>
################### <expr-mul>
#################### <expr-unary>
##################### <expr-primary>
###################### <id> -> table index: 17
################# <op-rel>
################## <
################# <expr-add>
################## <expr-mul>
################### <expr-unary>
#################### <expr-primary>
##################### <id> -> table index: 19
############ )
############ ;
######### <stmt>
########## <stmt-break>
########### break
########### ;
######## }
##### <def>
###### <fun-def>
####### <id> -> table index: 11
####### (
####### <param-list>
######## <id-list>
######### <id> -> table index: 22
######### <id-list-cont>
########## ,
########## <id> -> table index: 23
########## <id-list-cont>
####### )
####### {
####### <var-def-list>
####### <stmt-list>
####### }
#### <def>
##### <var-def>
###### var
###### <var-list>
####### <id-list>
######## <id> -> table index: 24
######## <id-list-cont>
###### ;
### <def>
#### <fun-def>
##### <id> -> table index: 18
##### (
##### <param-list>
##### )
##### {
##### <var-def-list>
##### <stmt-list>
###### <stmt-list>
####### <stmt-list>
######## <stmt-list>
######### <stmt-list>
######### <stmt>
########## <stmt-fun-call>
########### <fun-call>
############ <id> -> table index: 11
############ (
############ <expr-list>
############# <expr>
############## <expr-or>
############### <expr-and>
################ <expr-comp>
################# <expr-rel>
################## <expr-add>
################### <expr-add>
#################### <expr-mul>
##################### <expr-unary>
###################### <expr-primary>
####################### <lit>
######################## <lit-int>
################### <op-add>
#################### +
################### <expr-mul>
#################### <expr-mul>
##################### <expr-unary>
###################### <expr-primary>
####################### <lit>
######################## <lit-int>
#################### <op-mul>
##################### /
#################### <expr-unary>
##################### <expr-primary>
###################### (
###################### <expr>
####################### <expr-or>
######################## <expr-and>
######################### <expr-comp>
########################## <expr-rel>
########################### <expr-add>
############################ <expr-add>
############################# <expr-mul>
############################## <expr-unary>
############################### <expr-primary>
################################ <lit>
################################# <lit-int>
############################ <op-add>
############################# +
############################ <expr-mul>
############################# <expr-unary>
############################## <expr-primary>
############################### <lit>
################################ <lit-int>
###################### )
############# <expr-list-cont>
############## ,
############## <expr>
############### <expr-or>
################ <expr-and>
################# <expr-comp>
################## <expr-rel>
################### <expr-add>
#################### <expr-mul>
##################### <expr-unary>
###################### <expr-primary>
####################### <lit>
######################## <lit-int>
############## <expr-list-cont>
############### ,
############### <expr>
################ <expr-or>
################# <expr-and>
################## <expr-comp>
################### <expr-rel>
#################### <expr-add>
##################### <expr-mul>
###################### <expr-unary>
####################### <expr-primary>
######################## <lit>
######################### <lit-int>
############### <expr-list-cont>
############ )
########### ;
######## <stmt>
######### <stmt-fun-call>
########## <fun-call>
########### <id> -> table index: 11
########### (
########### <expr-list>
############ <expr>
############# <expr-or>
############## <expr-and>
############### <expr-comp>
################ <expr-rel>
################# <expr-add>
################## <expr-mul>
################### <expr-unary>
#################### <expr-primary>
##################### <lit>
###################### <lit-int>
############ <expr-list-cont>
############# ,
############# <expr>
############## <expr-or>
############### <expr-and>
################ <expr-comp>
################# <expr-rel>
################## <expr-add>
################### <expr-mul>
#################### <expr-unary>
##################### <expr-primary>
###################### <lit>
####################### <lit-int>
############# <expr-list-cont>
########### )
########## ;
####### <stmt>
######## <stmt-fun-call>
######### <fun-call>
########## <id>
########## (
########## <expr-list>
########## )
######### ;
###### <stmt>
####### <stmt-assign>
######## <id> -> table index: 24
######## =
######## <expr>
######### <expr-or>
########## <expr-and>
########### <expr-comp>
############ <expr-rel>
############# <expr-add>
############## <expr-mul>
############### <expr-unary>
################ <expr-primary>
################# <lit>
################## <lit-int>
######## ;
##### }
