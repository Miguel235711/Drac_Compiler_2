.\tests\third_party\05.drac
label: <id> content: print_array
label: ( content: (
label: <id> content: a
label: ) content: )
label: { content: {
label: var content: var
label: <id> content: first
label: , content: ,
label: <id> content: i
label: , content: ,
label: <id> content: n
label: ; content: ;
label: <id> content: first
label: = content: =
label: <lit-bool> content: true
label: ; content: ;
label: <id> content: printc
label: ( content: (
label: <lit-char> content: '['
label: ) content: )
label: ; content: ;
label: <id> content: i
label: = content: =
label: <lit-int> content: 0
label: ; content: ;
label: <id> content: n
label: = content: =
label: <id> content: size
label: ( content: (
label: <id> content: a
label: ) content: )
label: ; content: ;
label: while content: while
label: ( content: (
label: <id> content: i
label: < content: <
label: <id> content: n
label: ) content: )
label: { content: {
label: if content: if
label: ( content: (
label: <id> content: first
label: ) content: )
label: { content: {
label: <id> content: first
label: = content: =
label: <lit-bool> content: false
label: ; content: ;
label: } content: }
label: else content: else
label: { content: {
label: <id> content: prints
label: ( content: (
label: <lit-str> content: ", "
label: ) content: )
label: ; content: ;
label: } content: }
label: <id> content: printi
label: ( content: (
label: <id> content: get
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: i
label: ) content: )
label: ) content: )
label: ; content: ;
label: inc content: inc
label: <id> content: i
label: ; content: ;
label: } content: }
label: <id> content: printc
label: ( content: (
label: <lit-char> content: ']'
label: ) content: )
label: ; content: ;
label: } content: }
label: <id> content: sum_array
label: ( content: (
label: <id> content: a
label: ) content: )
label: { content: {
label: var content: var
label: <id> content: sum
label: , content: ,
label: <id> content: i
label: , content: ,
label: <id> content: n
label: ; content: ;
label: <id> content: sum
label: = content: =
label: <lit-int> content: 0
label: ; content: ;
label: <id> content: i
label: = content: =
label: <lit-int> content: 0
label: ; content: ;
label: <id> content: n
label: = content: =
label: <id> content: size
label: ( content: (
label: <id> content: a
label: ) content: )
label: ; content: ;
label: while content: while
label: ( content: (
label: <id> content: i
label: < content: <
label: <id> content: n
label: ) content: )
label: { content: {
label: <id> content: sum
label: = content: =
label: <id> content: sum
label: + content: +
label: <id> content: get
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: i
label: ) content: )
label: ; content: ;
label: inc content: inc
label: <id> content: i
label: ; content: ;
label: } content: }
label: return content: return
label: <id> content: sum
label: ; content: ;
label: } content: }
label: <id> content: max_array
label: ( content: (
label: <id> content: a
label: ) content: )
label: { content: {
label: var content: var
label: <id> content: max
label: , content: ,
label: <id> content: i
label: , content: ,
label: <id> content: n
label: , content: ,
label: <id> content: x
label: ; content: ;
label: <id> content: max
label: = content: =
label: <id> content: get
label: ( content: (
label: <id> content: a
label: , content: ,
label: <lit-int> content: 0
label: ) content: )
label: ; content: ;
label: <id> content: i
label: = content: =
label: <lit-int> content: 0
label: ; content: ;
label: <id> content: n
label: = content: =
label: <id> content: size
label: ( content: (
label: <id> content: a
label: ) content: )
label: ; content: ;
label: while content: while
label: ( content: (
label: <id> content: i
label: < content: <
label: <id> content: n
label: ) content: )
label: { content: {
label: <id> content: x
label: = content: =
label: <id> content: get
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: i
label: ) content: )
label: ; content: ;
label: if content: if
label: ( content: (
label: <id> content: x
label: > content: >
label: <id> content: max
label: ) content: )
label: { content: {
label: <id> content: max
label: = content: =
label: <id> content: x
label: ; content: ;
label: } content: }
label: inc content: inc
label: <id> content: i
label: ; content: ;
label: } content: }
label: return content: return
label: <id> content: max
label: ; content: ;
label: } content: }
label: <id> content: sort_array
label: ( content: (
label: <id> content: a
label: ) content: )
label: { content: {
label: var content: var
label: <id> content: i
label: , content: ,
label: <id> content: j
label: , content: ,
label: <id> content: t
label: , content: ,
label: <id> content: n
label: , content: ,
label: <id> content: swap
label: ; content: ;
label: <id> content: n
label: = content: =
label: <id> content: size
label: ( content: (
label: <id> content: a
label: ) content: )
label: ; content: ;
label: <id> content: i
label: = content: =
label: <lit-int> content: 0
label: ; content: ;
label: while content: while
label: ( content: (
label: <id> content: i
label: < content: <
label: <id> content: n
label: - content: -
label: <lit-int> content: 1
label: ) content: )
label: { content: {
label: <id> content: j
label: = content: =
label: <lit-int> content: 0
label: ; content: ;
label: <id> content: swap
label: = content: =
label: <lit-bool> content: false
label: ; content: ;
label: while content: while
label: ( content: (
label: <id> content: j
label: < content: <
label: <id> content: n
label: - content: -
label: <id> content: i
label: - content: -
label: <lit-int> content: 1
label: ) content: )
label: { content: {
label: if content: if
label: ( content: (
label: <id> content: get
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: j
label: ) content: )
label: > content: >
label: <id> content: get
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: j
label: + content: +
label: <lit-int> content: 1
label: ) content: )
label: ) content: )
label: { content: {
label: <id> content: t
label: = content: =
label: <id> content: get
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: j
label: ) content: )
label: ; content: ;
label: <id> content: set
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: j
label: , content: ,
label: <id> content: get
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: j
label: + content: +
label: <lit-int> content: 1
label: ) content: )
label: ) content: )
label: ; content: ;
label: <id> content: set
label: ( content: (
label: <id> content: a
label: , content: ,
label: <id> content: j
label: + content: +
label: <lit-int> content: 1
label: , content: ,
label: <id> content: t
label: ) content: )
label: ; content: ;
label: <id> content: swap
label: = content: =
label: <lit-bool> content: true
label: ; content: ;
label: } content: }
label: inc content: inc
label: <id> content: j
label: ; content: ;
label: } content: }
label: if content: if
label: ( content: (
label: not content: not
label: <id> content: swap
label: ) content: )
label: { content: {
label: break content: break
label: ; content: ;
label: } content: }
label: inc content: inc
label: <id> content: i
label: ; content: ;
label: } content: }
label: } content: }
label: <id> content: main
label: ( content: (
label: ) content: )
label: { content: {
label: var content: var
label: <id> content: array
label: , content: ,
label: <id> content: sum
label: , content: ,
label: <id> content: max
label: ; content: ;
label: <id> content: array
label: = content: =
label: [ content: [
label: <lit-int> content: 73
label: , content: ,
label: <lit-int> content: 77
label: , content: ,
label: <lit-int> content: 56
label: , content: ,
label: <lit-int> content: 10
label: , content: ,
label: <lit-int> content: 14
label: , content: ,
label: <lit-int> content: 54
label: , content: ,
label: <lit-int> content: 75
label: , content: ,
label: <lit-int> content: 62
label: , content: ,
label: <lit-int> content: 71
label: , content: ,
label: <lit-int> content: 10
label: , content: ,
label: <lit-int> content: 3
label: , content: ,
label: <lit-int> content: 71
label: , content: ,
label: <lit-int> content: 16
label: , content: ,
label: <lit-int> content: 49
label: , content: ,
label: <lit-int> content: 66
label: , content: ,
label: <lit-int> content: 91
label: , content: ,
label: <lit-int> content: 69
label: , content: ,
label: <lit-int> content: 62
label: , content: ,
label: <lit-int> content: 25
label: , content: ,
label: <lit-int> content: 65
label: ] content: ]
label: ; content: ;
label: <id> content: prints
label: ( content: (
label: <lit-str> content: "Original array: "
label: ) content: )
label: ; content: ;
label: <id> content: print_array
label: ( content: (
label: <id> content: array
label: ) content: )
label: ; content: ;
label: <id> content: println
label: ( content: (
label: ) content: )
label: ; content: ;
label: <id> content: sum
label: = content: =
label: <id> content: sum_array
label: ( content: (
label: <id> content: array
label: ) content: )
label: ; content: ;
label: <id> content: max
label: = content: =
label: <id> content: max_array
label: ( content: (
label: <id> content: array
label: ) content: )
label: ; content: ;
label: <id> content: prints
label: ( content: (
label: <lit-str> content: "Sum of array:   "
label: ) content: )
label: ; content: ;
label: <id> content: printi
label: ( content: (
label: <id> content: sum
label: ) content: )
label: ; content: ;
label: <id> content: println
label: ( content: (
label: ) content: )
label: ; content: ;
label: <id> content: prints
label: ( content: (
label: <lit-str> content: "Max of array:   "
label: ) content: )
label: ; content: ;
label: <id> content: printi
label: ( content: (
label: <id> content: max
label: ) content: )
label: ; content: ;
label: <id> content: println
label: ( content: (
label: ) content: )
label: ; content: ;
label: <id> content: sort_array
label: ( content: (
label: <id> content: array
label: ) content: )
label: ; content: ;
label: <id> content: prints
label: ( content: (
label: <lit-str> content: "Sorted array:   "
label: ) content: )
label: ; content: ;
label: <id> content: print_array
label: ( content: (
label: <id> content: array
label: ) content: )
label: ; content: ;
label: <id> content: println
label: ( content: (
label: ) content: )
label: ; content: ;
label: } content: }
