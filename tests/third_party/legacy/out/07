.\tests\third_party\07.drac
label: 19 content: var
label: 1 content: fails
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 1 content: value1
label: 21 content: ,
label: 1 content: value2
label: 21 content: ,
label: 1 content: message
label: 23 content: )
label: 24 content: {
label: 11 content: if
label: 22 content: (
label: 1 content: value1
label: 27 content: <>
label: 1 content: value2
label: 23 content: )
label: 24 content: {
label: 13 content: inc
label: 1 content: fails
label: 20 content: ;
label: 1 content: prints
label: 22 content: (
label: 4 content: "Assertion failure: "
label: 23 content: )
label: 20 content: ;
label: 1 content: prints
label: 22 content: (
label: 1 content: message
label: 23 content: )
label: 20 content: ;
label: 1 content: println
label: 22 content: (
label: 23 content: )
label: 20 content: ;
label: 25 content: }
label: 25 content: }
label: 1 content: main
label: 22 content: (
label: 23 content: )
label: 24 content: {
label: 19 content: var
label: 1 content: s
label: 21 content: ,
label: 1 content: a
label: 21 content: ,
label: 1 content: i
label: 21 content: ,
label: 1 content: n
label: 20 content: ;
label: 1 content: fails
label: 39 content: =
label: 2 content: 0
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 3 content: '\n'
label: 21 content: ,
label: 2 content: 10
label: 21 content: ,
label: 4 content: "error in newline literal"
label: 23 content: )
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 3 content: '\r'
label: 21 content: ,
label: 2 content: 13
label: 21 content: ,
label: 4 content: "error in carriage return literal"
label: 23 content: )
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 3 content: '\t'
label: 21 content: ,
label: 2 content: 9
label: 21 content: ,
label: 4 content: "error in tab literal"
label: 23 content: )
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 3 content: '\\'
label: 21 content: ,
label: 2 content: 92
label: 21 content: ,
label: 4 content: "error in backslash literal"
label: 23 content: )
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 3 content: '\''
label: 21 content: ,
label: 2 content: 39
label: 21 content: ,
label: 4 content: "error in single quote literal"
label: 23 content: )
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 3 content: '\"'
label: 21 content: ,
label: 2 content: 34
label: 21 content: ,
label: 4 content: "error in double quote literal"
label: 23 content: )
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 3 content: '\u000041'
label: 21 content: ,
label: 3 content: 'A'
label: 21 content: ,
label: 4 content: "error in letter A literal code point"
label: 23 content: )
label: 20 content: ;
label: 1 content: assert
label: 22 content: (
label: 3 content: '\u0020AC'
label: 21 content: ,
label: 2 content: 8364
label: 21 content: ,
label: 4 content: "error in euro literal code point"
label: 23 content: )
label: 20 content: ;
label: 1 content: s
label: 39 content: =
label: 4 content: "\u0000A1\u0020ACste ni\u0000F1o \u0020ACst\u0000E1 bien \u0000D1o\u0000F1o!\n"
label: 20 content: ;
label: 1 content: a
label: 39 content: =
label: 37 content: [
label: 2 content: 161
label: 21 content: ,
label: 2 content: 8364
label: 21 content: ,
label: 2 content: 115
label: 21 content: ,
label: 2 content: 116
label: 21 content: ,
label: 2 content: 101
label: 21 content: ,
label: 2 content: 32
label: 21 content: ,
label: 2 content: 110
label: 21 content: ,
label: 2 content: 105
label: 21 content: ,
label: 2 content: 241
label: 21 content: ,
label: 2 content: 111
label: 21 content: ,
label: 2 content: 32
label: 21 content: ,
label: 2 content: 8364
label: 21 content: ,
label: 2 content: 115
label: 21 content: ,
label: 2 content: 116
label: 21 content: ,
label: 2 content: 225
label: 21 content: ,
label: 2 content: 32
label: 21 content: ,
label: 2 content: 98
label: 21 content: ,
label: 2 content: 105
label: 21 content: ,
label: 2 content: 101
label: 21 content: ,
label: 2 content: 110
label: 21 content: ,
label: 2 content: 32
label: 21 content: ,
label: 2 content: 209
label: 21 content: ,
label: 2 content: 111
label: 21 content: ,
label: 2 content: 241
label: 21 content: ,
label: 2 content: 111
label: 21 content: ,
label: 2 content: 33
label: 21 content: ,
label: 2 content: 10
label: 38 content: ]
label: 20 content: ;
label: 1 content: i
label: 39 content: =
label: 2 content: 0
label: 20 content: ;
label: 1 content: n
label: 39 content: =
label: 1 content: size
label: 22 content: (
label: 1 content: s
label: 23 content: )
label: 20 content: ;
label: 17 content: while
label: 22 content: (
label: 1 content: i
label: 28 content: <
label: 1 content: n
label: 23 content: )
label: 24 content: {
label: 1 content: assert
label: 22 content: (
label: 1 content: get
label: 22 content: (
label: 1 content: a
label: 21 content: ,
label: 1 content: i
label: 23 content: )
label: 21 content: ,
label: 1 content: get
label: 22 content: (
label: 1 content: s
label: 21 content: ,
label: 1 content: i
label: 23 content: )
label: 21 content: ,
label: 4 content: "error in string literal"
label: 23 content: )
label: 20 content: ;
label: 13 content: inc
label: 1 content: i
label: 20 content: ;
label: 25 content: }
label: 1 content: printi
label: 22 content: (
label: 1 content: fails
label: 23 content: )
label: 20 content: ;
label: 1 content: prints
label: 22 content: (
label: 4 content: " assertion failure(s) found."
label: 23 content: )
label: 20 content: ;
label: 1 content: println
label: 22 content: (
label: 23 content: )
label: 20 content: ;
label: 1 content: prints
label: 22 content: (
label: 1 content: a
label: 23 content: )
label: 20 content: ;
label: 25 content: }
