.\tests_demo\004_factorial.drac
# <program>
## <def-list>
### <def-list>
#### <def-list>
##### <def-list>
###### <def-list>
####### <def-list>
######## <def-list>
######### <def-list>
######### <def>
########## <fun-def>
########### <id> -> table index: 11
########### (
########### <param-list>
############ <id-list>
############# <id> -> table index: 25
############# <id-list-cont>
########### )
########### {
########### <var-def-list>
############ <var-def-list>
############ <var-def>
############# var
############# <var-list>
############## <id-list>
############### <id> -> table index: 26
############### <id-list-cont>
################ ,
################ <id> -> table index: 27
################ <id-list-cont>
############# ;
########### <stmt-list>
############ <stmt-list>
############# <stmt-list>
############## <stmt-list>
############### <stmt-list>
############### <stmt>
################ <stmt-assign>
################# <id> -> table index: 26
################# =
################# <expr>
################## <expr-or>
################### <expr-and>
#################### <expr-comp>
##################### <expr-rel>
###################### <expr-add>
####################### <expr-mul>
######################## <expr-unary>
######################### <expr-primary>
########################## <lit>
########################### <lit-int>
################# ;
############## <stmt>
############### <stmt-assign>
################ <id> -> table index: 27
################ =
################ <expr>
################# <expr-or>
################## <expr-and>
################### <expr-comp>
#################### <expr-rel>
##################### <expr-add>
###################### <expr-mul>
####################### <expr-unary>
######################## <expr-primary>
######################### <lit>
########################## <lit-int>
################ ;
############# <stmt>
############## <stmt-while>
############### while
############### (
############### <expr>
################ <expr-or>
################# <expr-and>
################## <expr-comp>
################### <expr-rel>
#################### <expr-rel>
##################### <expr-add>
###################### <expr-mul>
####################### <expr-unary>
######################## <expr-primary>
######################### <id> -> table index: 27
#################### <op-rel>
##################### <=
#################### <expr-add>
##################### <expr-mul>
###################### <expr-unary>
####################### <expr-primary>
######################## <id> -> table index: 25
############### )
############### {
############### <stmt-list>
################ <stmt-list>
################# <stmt-list>
################# <stmt>
################## <stmt-assign>
################### <id> -> table index: 26
################### =
################### <expr>
#################### <expr-or>
##################### <expr-and>
###################### <expr-comp>
####################### <expr-rel>
######################## <expr-add>
######################### <expr-mul>
########################## <expr-mul>
########################### <expr-unary>
############################ <expr-primary>
############################# <id> -> table index: 26
########################## <op-mul>
########################### *
########################## <expr-unary>
########################### <expr-primary>
############################ <id> -> table index: 27
################### ;
################ <stmt>
################# <stmt-incr>
################## inc
################## <id> -> table index: 27
################## ;
############### }
############ <stmt>
############# <stmt-return>
############## return
############## <expr>
############### <expr-or>
################ <expr-and>
################# <expr-comp>
################## <expr-rel>
################### <expr-add>
#################### <expr-mul>
##################### <expr-unary>
###################### <expr-primary>
####################### <id> -> table index: 26
############## ;
########### }
######## <def>
######### <fun-def>
########## <id> -> table index: 15
########## (
########## <param-list>
########### <id-list>
############ <id> -> table index: 28
############ <id-list-cont>
########## )
########## {
########## <var-def-list>
########## <stmt-list>
########### <stmt-list>
########### <stmt>
############ <stmt-if>
############# if
############# (
############# <expr>
############## <expr-or>
############### <expr-and>
################ <expr-comp>
################# <expr-rel>
################## <expr-rel>
################### <expr-add>
#################### <expr-mul>
##################### <expr-unary>
###################### <expr-primary>
####################### <id> -> table index: 28
################## <op-rel>
################### <=
################## <expr-add>
################### <expr-mul>
#################### <expr-unary>
##################### <expr-primary>
###################### <lit>
####################### <lit-int>
############# )
############# {
############# <stmt-list>
############## <stmt-list>
############## <stmt>
############### <stmt-return>
################ return
################ <expr>
################# <expr-or>
################## <expr-and>
################### <expr-comp>
#################### <expr-rel>
##################### <expr-add>
###################### <expr-mul>
####################### <expr-unary>
######################## <expr-primary>
######################### <lit>
########################## <lit-int>
################ ;
############# }
############# <else-if-list>
############# <else>
############## else
############## {
############## <stmt-list>
############### <stmt-list>
############### <stmt>
################ <stmt-return>
################# return
################# <expr>
################## <expr-or>
################### <expr-and>
#################### <expr-comp>
##################### <expr-rel>
###################### <expr-add>
####################### <expr-mul>
######################## <expr-mul>
######################### <expr-unary>
########################## <expr-primary>
########################### <id> -> table index: 28
######################## <op-mul>
######################### *
######################## <expr-unary>
######################### <expr-primary>
########################## <fun-call>
########################### <id> -> table index: 15
########################### (
########################### <expr-list>
############################ <expr>
############################# <expr-or>
############################## <expr-and>
############################### <expr-comp>
################################ <expr-rel>
################################# <expr-add>
################################## <expr-add>
################################### <expr-mul>
#################################### <expr-unary>
##################################### <expr-primary>
###################################### <id> -> table index: 28
################################## <op-add>
################################### -
################################## <expr-mul>
################################### <expr-unary>
#################################### <expr-primary>
##################################### <lit>
###################################### <lit-int>
############################ <expr-list-cont>
########################### )
################# ;
############## }
########## }
####### <def>
######## <fun-def>
######### <id> -> table index: 17
######### (
######### <param-list>
######### )
######### {
######### <var-def-list>
######### <stmt-list>
########## <stmt-list>
########### <stmt-list>
############ <stmt-list>
############ <stmt>
############# <stmt-assign>
############## <id> -> table index: 18
############## =
############## <expr>
############### <expr-or>
################ <expr-and>
################# <expr-comp>
################## <expr-rel>
################### <expr-add>
#################### <expr-mul>
##################### <expr-unary>
###################### <expr-primary>
####################### <lit>
######################## <lit-int>
############## ;
########### <stmt>
############ <stmt-fun-call>
############# <fun-call>
############## <id> -> table index: 17
############## (
############## <expr-list>
############## )
############# ;
########## <stmt>
########### <stmt-assign>
############ <id> -> table index: 24
############ =
############ <expr>
############# <expr-or>
############## <expr-and>
############### <expr-comp>
################ <expr-rel>
################# <expr-add>
################## <expr-mul>
################### <expr-unary>
#################### <expr-primary>
##################### <lit>
###################### <lit-int>
############ ;
######### }
###### <def>
####### <var-def>
######## var
######## <var-list>
######### <id-list>
########## <id> -> table index: 29
########## <id-list-cont>
######## ;
##### <def>
###### <var-def>
####### var
####### <var-list>
######## <id-list>
######### <id> -> table index: 30
######### <id-list-cont>
####### ;
#### <def>
##### <fun-def>
###### <id> -> table index: 20
###### (
###### <param-list>
###### )
###### {
###### <var-def-list>
####### <var-def-list>
####### <var-def>
######## var
######## <var-list>
######### <id-list>
########## <id> -> table index: 31
########## <id-list-cont>
########### ,
########### <id> -> table index: 32
########### <id-list-cont>
############ ,
############ <id> -> table index: 33
############ <id-list-cont>
######## ;
###### <stmt-list>
####### <stmt-list>
######## <stmt-list>
######### <stmt-list>
########## <stmt-list>
########## <stmt>
########### <stmt-assign>
############ <id> -> table index: 33
############ =
############ <expr>
############# <expr-or>
############## <expr-and>
############### <expr-comp>
################ <expr-rel>
################# <expr-add>
################## <expr-mul>
################### <expr-unary>
#################### <expr-primary>
##################### <fun-call>
###################### <id> -> table index: 17
###################### (
###################### <expr-list>
###################### )
############ ;
######### <stmt>
########## <stmt-assign>
########### <id> -> table index: 33
########### =
########### <expr>
############ <expr-or>
############# <expr-and>
############## <expr-comp>
############### <expr-rel>
################ <expr-add>
################# <expr-mul>
################## <expr-unary>
################### <expr-primary>
#################### <lit>
##################### <lit-int>
########### ;
######## <stmt>
######### <stmt-assign>
########## <id> -> table index: 29
########## =
########## <expr>
########### <expr-or>
############ <expr-and>
############# <expr-comp>
############## <expr-rel>
############### <expr-add>
################ <expr-mul>
################# <expr-unary>
################## <op-unary>
################### +
################## <expr-unary>
################### <expr-primary>
#################### <id> -> table index: 33
########## ;
####### <stmt>
######## <stmt-do-while>
######### do
######### {
######### <stmt-list>
########## <stmt-list>
########### <stmt-list>
############ <stmt-list>
############# <stmt-list>
############## <stmt-list>
############### <stmt-list>
################ <stmt-list>
################# <stmt-list>
################## <stmt-list>
################### <stmt-list>
#################### <stmt-list>
##################### <stmt-list>
##################### <stmt>
###################### <stmt-break>
####################### break
####################### ;
#################### <stmt>
##################### <stmt-fun-call>
###################### <fun-call>
####################### <id> -> table index: 2
####################### (
####################### <expr-list>
######################## <expr>
######################### <expr-or>
########################## <expr-and>
########################### <expr-comp>
############################ <expr-rel>
############################# <expr-add>
############################## <expr-mul>
############################### <expr-unary>
################################ <expr-primary>
################################# <lit>
################################## <lit-str>
######################## <expr-list-cont>
####################### )
###################### ;
################### <stmt>
#################### <stmt-assign>
##################### <id> -> table index: 31
##################### =
##################### <expr>
###################### <expr-or>
####################### <expr-and>
######################## <expr-comp>
######################### <expr-rel>
########################## <expr-add>
########################### <expr-mul>
############################ <expr-unary>
############################# <expr-primary>
############################## <fun-call>
############################### <id> -> table index: 4
############################### (
############################### <expr-list>
############################### )
##################### ;
################## <stmt>
################### <stmt-fun-call>
#################### <fun-call>
##################### <id> -> table index: 2
##################### (
##################### <expr-list>
###################### <expr>
####################### <expr-or>
######################## <expr-and>
######################### <expr-comp>
########################## <expr-rel>
########################### <expr-add>
############################ <expr-mul>
############################# <expr-unary>
############################## <expr-primary>
############################### <lit>
################################ <lit-str>
###################### <expr-list-cont>
##################### )
#################### ;
################# <stmt>
################## <stmt-fun-call>
################### <fun-call>
#################### <id> -> table index: 0
#################### (
#################### <expr-list>
##################### <expr>
###################### <expr-or>
####################### <expr-and>
######################## <expr-comp>
######################### <expr-rel>
########################## <expr-add>
########################### <expr-mul>
############################ <expr-unary>
############################# <expr-primary>
############################## <fun-call>
############################### <id> -> table index: 11
############################### (
############################### <expr-list>
################################ <expr>
################################# <expr-or>
################################## <expr-and>
################################### <expr-comp>
#################################### <expr-rel>
##################################### <expr-add>
###################################### <expr-mul>
####################################### <expr-unary>
######################################## <expr-primary>
######################################### <id> -> table index: 31
################################ <expr-list-cont>
############################### )
##################### <expr-list-cont>
#################### )
################### ;
################ <stmt>
################# <stmt-fun-call>
################## <fun-call>
################### <id> -> table index: 3
################### (
################### <expr-list>
################### )
################## ;
############### <stmt>
################ <stmt-fun-call>
################# <fun-call>
################## <id> -> table index: 2
################## (
################## <expr-list>
################### <expr>
#################### <expr-or>
##################### <expr-and>
###################### <expr-comp>
####################### <expr-rel>
######################## <expr-add>
######################### <expr-mul>
########################## <expr-unary>
########################### <expr-primary>
############################ <lit>
############################# <lit-str>
################### <expr-list-cont>
################## )
################# ;
############## <stmt>
############### <stmt-fun-call>
################ <fun-call>
################# <id> -> table index: 0
################# (
################# <expr-list>
################## <expr>
################### <expr-or>
#################### <expr-and>
##################### <expr-comp>
###################### <expr-rel>
####################### <expr-add>
######################## <expr-mul>
######################### <expr-unary>
########################## <expr-primary>
########################### <fun-call>
############################ <id> -> table index: 15
############################ (
############################ <expr-list>
############################# <expr>
############################## <expr-or>
############################### <expr-and>
################################ <expr-comp>
################################# <expr-rel>
################################## <expr-add>
################################### <expr-mul>
#################################### <expr-unary>
##################################### <expr-primary>
###################################### <id> -> table index: 31
############################# <expr-list-cont>
############################ )
################## <expr-list-cont>
################# )
################ ;
############# <stmt>
############## <stmt-fun-call>
############### <fun-call>
################ <id> -> table index: 3
################ (
################ <expr-list>
################ )
############### ;
############ <stmt>
############# <stmt-fun-call>
############## <fun-call>
############### <id> -> table index: 2
############### (
############### <expr-list>
################ <expr>
################# <expr-or>
################## <expr-and>
################### <expr-comp>
#################### <expr-rel>
##################### <expr-add>
###################### <expr-mul>
####################### <expr-unary>
######################## <expr-primary>
######################### <lit>
########################## <lit-str>
################ <expr-list-cont>
############### )
############## ;
########### <stmt>
############ <stmt-assign>
############# <id> -> table index: 32
############# =
############# <expr>
############## <expr-or>
############### <expr-and>
################ <expr-comp>
################# <expr-rel>
################## <expr-add>
################### <expr-mul>
#################### <expr-unary>
##################### <expr-primary>
###################### <fun-call>
####################### <id> -> table index: 5
####################### (
####################### <expr-list>
####################### )
############# ;
########## <stmt>
########### <stmt-if>
############ if
############ (
############ <expr>
############# <expr-or>
############## <expr-and>
############### <expr-comp>
################ <expr-comp>
################# <expr-rel>
################## <expr-add>
################### <expr-mul>
#################### <expr-unary>
##################### <expr-primary>
###################### <fun-call>
####################### <id> -> table index: 7
####################### (
####################### <expr-list>
######################## <expr>
######################### <expr-or>
########################## <expr-and>
########################### <expr-comp>
############################ <expr-rel>
############################# <expr-add>
############################## <expr-mul>
############################### <expr-unary>
################################ <expr-primary>
################################# <id> -> table index: 32
######################## <expr-list-cont>
####################### )
################ <op-comp>
################# ==
################ <expr-rel>
################# <expr-add>
################## <expr-mul>
################### <expr-unary>
#################### <expr-primary>
##################### <lit>
###################### <lit-int>
############ )
############ {
############ <stmt-list>
############# <stmt-list>
############# <stmt>
############## <stmt-assign>
############### <id> -> table index: 32
############### =
############### <expr>
################ <expr-or>
################# <expr-and>
################## <expr-comp>
################### <expr-rel>
#################### <expr-add>
##################### <expr-mul>
###################### <expr-unary>
####################### <expr-primary>
######################## <lit>
######################### <lit-char>
############### ;
############ }
############ <else-if-list>
############ <else>
############# else
############# {
############# <stmt-list>
############## <stmt-list>
############## <stmt>
############### <stmt-assign>
################ <id> -> table index: 32
################ =
################ <expr>
################# <expr-or>
################## <expr-and>
################### <expr-comp>
#################### <expr-rel>
##################### <expr-add>
###################### <expr-mul>
####################### <expr-unary>
######################## <expr-primary>
######################### <fun-call>
########################## <id> -> table index: 9
########################## (
########################## <expr-list>
########################### <expr>
############################ <expr-or>
############################# <expr-and>
############################## <expr-comp>
############################### <expr-rel>
################################ <expr-add>
################################# <expr-mul>
################################## <expr-unary>
################################### <expr-primary>
#################################### <id> -> table index: 32
########################### <expr-list-cont>
############################ ,
############################ <expr>
############################# <expr-or>
############################## <expr-and>
############################### <expr-comp>
################################ <expr-rel>
################################# <expr-add>
################################## <expr-mul>
################################### <expr-unary>
#################################### <expr-primary>
##################################### <lit>
###################################### <lit-int>
############################ <expr-list-cont>
########################## )
################ ;
############# }
######### }
######### while
######### (
######### <expr>
########## <expr-or>
########### <expr-or>
############ <expr-and>
############# <expr-comp>
############## <expr-comp>
############### <expr-rel>
################ <expr-add>
################# <expr-mul>
################## <expr-unary>
################### <expr-primary>
#################### <id> -> table index: 32
############## <op-comp>
############### ==
############## <expr-rel>
############### <expr-add>
################ <expr-mul>
################# <expr-unary>
################## <expr-primary>
################### <lit>
#################### <lit-char>
########### or
########### <expr-and>
############ <expr-comp>
############# <expr-comp>
############## <expr-rel>
############### <expr-add>
################ <expr-mul>
################# <expr-unary>
################## <expr-primary>
################### <id> -> table index: 32
############# <op-comp>
############## ==
############# <expr-rel>
############## <expr-add>
############### <expr-mul>
################ <expr-unary>
################# <expr-primary>
################## <lit>
################### <lit-char>
######### )
######### ;
###### }
### <def>
#### <var-def>
##### var
##### <var-list>
###### <id-list>
####### <id> -> table index: 34
####### <id-list-cont>
##### ;
